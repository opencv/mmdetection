FROM ubuntu:16.04

RUN apt-get update && apt-get install -y --no-install-recommends \
         build-essential \
         git \
         curl \
         ca-certificates \
         libjpeg-dev \
         libpng-dev \
         libglib2.0-0 \
         libsm6 \
         libxrender-dev \
         libxext6 \
         cmake \
         gcc \
         protobuf-compiler \
         libgtk2.0-dev && \
     rm -rf /var/lib/apt/lists/*

# Install PyTorch
RUN curl -o ~/miniconda.sh -LO  https://repo.continuum.io/miniconda/Miniconda3-py37_4.8.3-Linux-x86_64.sh  && \
     chmod +x ~/miniconda.sh && \
     ~/miniconda.sh -b -p /opt/conda && \
     rm ~/miniconda.sh && \
     /opt/conda/bin/conda install conda-build && \
     /opt/conda/bin/conda create -y --name pytorch-py37 python=3.7 numpy pyyaml scipy ipython mkl cython && \
     /opt/conda/bin/conda clean -ya
ENV PATH /opt/conda/envs/pytorch-py37/bin:/opt/conda/bin:$PATH
RUN conda install --name pytorch-py37 pytorch==1.4.0 torchvision cpuonly -c pytorch && /opt/conda/bin/conda clean -ya

# Install mmdetection
ARG MMDET_BRANCH=develop
RUN git clone --recursive --branch $MMDET_BRANCH https://github.com/opencv/mmdetection.git /mmdetection
WORKDIR /mmdetection
ENV FORCE_CUDA="0"
RUN pip install --no-cache-dir -e .['all']

# Install OpenVINO
RUN apt update && \
    apt install -y \
        libgtk-3-dev \
        cpio \
        unzip \
        wget \
        curl && \
     rm -rf /var/lib/apt/lists/*

ARG OPENVINO_LINK=http://registrationcenter-download.intel.com/akdlm/irc_nas/16612/l_openvino_toolkit_p_2020.2.120.tgz
RUN mkdir -p /tmp/openvino_installer && cd /tmp/openvino_installer && \
    wget --no-verbose $OPENVINO_LINK && \
    tar xf l_openvino_toolkit*.tgz && \
    rm l_openvino_toolkit*.tgz && \
    cd l_openvino_toolkit* && \
    bash ./install.sh -s silent.cfg --accept_eula && \
    cd /opt/intel/openvino/install_dependencies/ && \
    dpkg -i intel-*.deb && \
    ldconfig && \
    rm -rf /tmp/openvino_installer && \
    pip install -r /opt/intel/openvino/deployment_tools/model_optimizer/requirements_onnx.txt && \
    echo "source /opt/intel/openvino/bin/setupvars.sh" >> /etc/profile

# Prepare workspace to use for any user
ENV BASH_ENV "/etc/profile"
ENV USER docker
RUN mkdir -m 777 /workspace
ENV HOME /workspace
WORKDIR /workspace
